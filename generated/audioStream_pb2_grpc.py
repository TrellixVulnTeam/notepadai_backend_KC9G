# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from generated import audioStream_pb2 as audioStream__pb2


class AudioProcessorStub(object):
  """Interface to server
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.transcriptAudio = channel.stream_stream(
        '/AudioProcessor/transcriptAudio',
        request_serializer=audioStream__pb2.Samples.SerializeToString,
        response_deserializer=audioStream__pb2.Response.FromString,
        )


class AudioProcessorServicer(object):
  """Interface to server
  """

  def transcriptAudio(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AudioProcessorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'transcriptAudio': grpc.stream_stream_rpc_method_handler(
          servicer.transcriptAudio,
          request_deserializer=audioStream__pb2.Samples.FromString,
          response_serializer=audioStream__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AudioProcessor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))

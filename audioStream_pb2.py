# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: audioStream.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='audioStream.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x11\x61udioStream.proto\"\x1b\n\nAudioChunk\x12\r\n\x05\x63hunk\x18\x01 \x01(\x0c\"\x17\n\x08Sentence\x12\x0b\n\x03msg\x18\x01 \x01(\t2?\n\x0e\x41udioProcessor\x12-\n\x0fTranscriptAudio\x12\x0b.AudioChunk\x1a\t.Sentence(\x01\x30\x01\x62\x06proto3')
)




_AUDIOCHUNK = _descriptor.Descriptor(
  name='AudioChunk',
  full_name='AudioChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk', full_name='AudioChunk.chunk', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=48,
)


_SENTENCE = _descriptor.Descriptor(
  name='Sentence',
  full_name='Sentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='Sentence.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=73,
)

DESCRIPTOR.message_types_by_name['AudioChunk'] = _AUDIOCHUNK
DESCRIPTOR.message_types_by_name['Sentence'] = _SENTENCE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AudioChunk = _reflection.GeneratedProtocolMessageType('AudioChunk', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOCHUNK,
  __module__ = 'audioStream_pb2'
  # @@protoc_insertion_point(class_scope:AudioChunk)
  ))
_sym_db.RegisterMessage(AudioChunk)

Sentence = _reflection.GeneratedProtocolMessageType('Sentence', (_message.Message,), dict(
  DESCRIPTOR = _SENTENCE,
  __module__ = 'audioStream_pb2'
  # @@protoc_insertion_point(class_scope:Sentence)
  ))
_sym_db.RegisterMessage(Sentence)



_AUDIOPROCESSOR = _descriptor.ServiceDescriptor(
  name='AudioProcessor',
  full_name='AudioProcessor',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=75,
  serialized_end=138,
  methods=[
  _descriptor.MethodDescriptor(
    name='TranscriptAudio',
    full_name='AudioProcessor.TranscriptAudio',
    index=0,
    containing_service=None,
    input_type=_AUDIOCHUNK,
    output_type=_SENTENCE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AUDIOPROCESSOR)

DESCRIPTOR.services_by_name['AudioProcessor'] = _AUDIOPROCESSOR

# @@protoc_insertion_point(module_scope)
